"""empty message

Revision ID: 945d2c659180
Revises: 1af5ecbfe036
Create Date: 2021-02-23 13:46:47.210311

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '945d2c659180'
down_revision = '1af5ecbfe036'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Agenda_expert',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agenda_taken', sa.Integer(), nullable=True),
    sa.Column('Participant_invité', sa.Integer(), nullable=True),
    sa.Column('validation', sa.Boolean(), nullable=True),
    sa.Column('visibility', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['Participant_invité'], ['Expert.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['agenda_taken'], ['Agenda.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Tarifs_client')
    op.add_column('Agenda', sa.Column('Adresse1_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Adresse2_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Chemin_de_fichier_joint', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Code_postal_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Date_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Date_Rdv_annulé', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Heure_début_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Heure_fin_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Informations_de_suivi_de_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Informations_générales', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Informations_réservées_service_planification', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Organisateur', sa.Integer(), nullable=True))
    op.add_column('Agenda', sa.Column('Ref_agenda_date', sa.DateTime(), nullable=True))
    op.add_column('Agenda', sa.Column('Titre_du_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('Ville_du_Rdv', sa.String(), nullable=True))
    op.add_column('Agenda', sa.Column('client_id', sa.Integer(), nullable=True))
    op.add_column('Agenda', sa.Column('visibility', sa.Boolean(), nullable=True))
    op.create_foreign_key(None, 'Agenda', 'Expert', ['Organisateur'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Agenda', 'Client', ['client_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_column('Agenda', 'Validation_par_agent')
    op.drop_column('Agenda', 'Status')
    op.drop_column('Agenda', 'Lieu')
    op.drop_column('Agenda', 'clien_t')
    op.drop_column('Agenda', 'audit_planner')
    op.drop_column('Agenda', 'Rapport')
    op.drop_column('Agenda', 'Date_')
    op.drop_column('Agenda', 'Agent_referent_du_client')
    op.create_foreign_key(None, 'Facturation', 'Client', ['Locataire'], ['id'])
    op.create_foreign_key(None, 'Facturation', 'Expert', ['expéditeur'], ['id'])
    op.create_foreign_key(None, 'Facturation', 'Client', ['Proprietaire'], ['id'])
    op.create_foreign_key(None, 'Facturation', 'Client', ['Destinataire'], ['id'])
    op.add_column('Mission', sa.Column('date', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_Suiveur_Cell_Planif'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_Suiveur_Cell_Tech'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_manager_chiffrage'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_agent_chiffrage'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_Agent_CellTech'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_Respon_Cell_Planif'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_agent_Cell_Dev'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_Respon_Cell_Dev'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_INTERV'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Client', ['Reference_BAILLEUR'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Client', ['Reference_LOCATAIRE'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_Agent_saisie_Cell_Planif'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_Respon_Cell_Tech'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Mission', 'Expert', ['ID_CONCESS'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.add_column('Tarifs', sa.Column('Cell_AS_referent_client', sa.Integer(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_AS_referent_client_taux_com', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_Planif_Ref_agent_client', sa.Integer(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_Planif_Ref_agent_taux_com', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_Planif_Ref_respon_client', sa.Integer(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_Planif_Ref_respon_taux_com', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_Planif_Ref_suiveur_client', sa.Integer(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_Planif_Ref_suiveur_taux_com', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_devel_agent_suivi_client', sa.Integer(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_devel_agent_suivi_client_taux_com', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_devel_client', sa.Integer(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_devel_respon_client_taux_com', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_tech_Ref_agent_suivi_client', sa.Integer(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_tech_Ref_respon_suivi_client_taux_com', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_tech_Ref_suiveur_client', sa.Integer(), nullable=True))
    op.add_column('Tarifs', sa.Column('Cell_tech_Ref_suiveur_taux_com', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('code_tva', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('commentaire_libre', sa.String(), nullable=True))
    op.add_column('Tarifs', sa.Column('date', sa.DateTime(), nullable=True))
    op.add_column('Tarifs', sa.Column('reference_client', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'Tarifs', 'Expert', ['Cell_tech_Ref_agent_suivi_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Tarifs', 'Client', ['reference_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Tarifs', 'Expert', ['Cell_devel_agent_suivi_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Tarifs', 'Expert', ['Cell_Planif_Ref_respon_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Tarifs', 'Expert', ['Cell_devel_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Tarifs', 'Expert', ['Cell_Planif_Ref_agent_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Tarifs', 'Expert', ['Cell_tech_Ref_suiveur_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Tarifs', 'Expert', ['Cell_Planif_Ref_suiveur_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'Tarifs', 'Expert', ['Cell_AS_referent_client'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_constraint(None, 'Tarifs', type_='foreignkey')
    op.drop_column('Tarifs', 'reference_client')
    op.drop_column('Tarifs', 'date')
    op.drop_column('Tarifs', 'commentaire_libre')
    op.drop_column('Tarifs', 'code_tva')
    op.drop_column('Tarifs', 'Cell_tech_Ref_suiveur_taux_com')
    op.drop_column('Tarifs', 'Cell_tech_Ref_suiveur_client')
    op.drop_column('Tarifs', 'Cell_tech_Ref_respon_suivi_client_taux_com')
    op.drop_column('Tarifs', 'Cell_tech_Ref_agent_suivi_client')
    op.drop_column('Tarifs', 'Cell_devel_respon_client_taux_com')
    op.drop_column('Tarifs', 'Cell_devel_client')
    op.drop_column('Tarifs', 'Cell_devel_agent_suivi_client_taux_com')
    op.drop_column('Tarifs', 'Cell_devel_agent_suivi_client')
    op.drop_column('Tarifs', 'Cell_Planif_Ref_suiveur_taux_com')
    op.drop_column('Tarifs', 'Cell_Planif_Ref_suiveur_client')
    op.drop_column('Tarifs', 'Cell_Planif_Ref_respon_taux_com')
    op.drop_column('Tarifs', 'Cell_Planif_Ref_respon_client')
    op.drop_column('Tarifs', 'Cell_Planif_Ref_agent_taux_com')
    op.drop_column('Tarifs', 'Cell_Planif_Ref_agent_client')
    op.drop_column('Tarifs', 'Cell_AS_referent_client_taux_com')
    op.drop_column('Tarifs', 'Cell_AS_referent_client')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_constraint(None, 'Mission', type_='foreignkey')
    op.drop_column('Mission', 'date')
    op.drop_constraint(None, 'Facturation', type_='foreignkey')
    op.drop_constraint(None, 'Facturation', type_='foreignkey')
    op.drop_constraint(None, 'Facturation', type_='foreignkey')
    op.drop_constraint(None, 'Facturation', type_='foreignkey')
    op.add_column('Agenda', sa.Column('Agent_referent_du_client', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('Agenda', sa.Column('Date_', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('Agenda', sa.Column('Rapport', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('Agenda', sa.Column('audit_planner', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('Agenda', sa.Column('clien_t', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('Agenda', sa.Column('Lieu', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('Agenda', sa.Column('Status', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('Agenda', sa.Column('Validation_par_agent', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'Agenda', type_='foreignkey')
    op.drop_constraint(None, 'Agenda', type_='foreignkey')
    op.drop_column('Agenda', 'visibility')
    op.drop_column('Agenda', 'client_id')
    op.drop_column('Agenda', 'Ville_du_Rdv')
    op.drop_column('Agenda', 'Titre_du_Rdv')
    op.drop_column('Agenda', 'Ref_agenda_date')
    op.drop_column('Agenda', 'Organisateur')
    op.drop_column('Agenda', 'Informations_réservées_service_planification')
    op.drop_column('Agenda', 'Informations_générales')
    op.drop_column('Agenda', 'Informations_de_suivi_de_Rdv')
    op.drop_column('Agenda', 'Heure_fin_Rdv')
    op.drop_column('Agenda', 'Heure_début_Rdv')
    op.drop_column('Agenda', 'Date_Rdv_annulé')
    op.drop_column('Agenda', 'Date_Rdv')
    op.drop_column('Agenda', 'Code_postal_Rdv')
    op.drop_column('Agenda', 'Chemin_de_fichier_joint')
    op.drop_column('Agenda', 'Adresse2_Rdv')
    op.drop_column('Agenda', 'Adresse1_Rdv')
    op.create_table('Tarifs_client',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Tarifs_client_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('reference_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('maison_appartement', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_maison', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Prix_EDL', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Prix_Chiffrage', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('code_tva', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Cell_AS_referent_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Cell_AS_referent_client_taux_com', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Cell_devel_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Cell_devel_respon_client_taux_com', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Cell_devel_agent_suivi_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Cell_devel_agent_suivi_client_taux_com', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Cell_tech_Ref_agent_suivi_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Cell_tech_Ref_respon_suivi_client_taux_com', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Cell_tech_Ref_suiveur_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Cell_tech_Ref_suiveur_taux_com', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Cell_Planif_Ref_respon_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Cell_Planif_Ref_respon_taux_com', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Cell_Planif_Ref_suiveur_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Cell_Planif_Ref_suiveur_taux_com', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Cell_Planif_Ref_agent_client', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('Cell_Planif_Ref_agent_taux_com', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('commentaire_libre', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('visibility', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Tarifs_client_pkey')
    )
    op.drop_table('Agenda_expert')
    # ### end Alembic commands ###
